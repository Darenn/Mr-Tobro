pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--lowrezjam
--by darenn keller

--Game
tile_size = 4

player = nil

deltatime = 1/30 -- because we're running at 30 fps

function _init()
  -- make the game in 64x64
  poke(0x5f2c,3)
  
  player = create_player(6, 6)
  bullet = create_bullet(0, 6 * 4, 1, 1, {x=1, y=0}, 15, 12)
  bullet2 = create_bullet(10, 6 * 4, 1, 1, {x=-1, y=0}, 1, 12)
end

function _update()
  update_player(player)
  update_bullet(bullet)
  update_bullet(bullet2)
end

function _draw()
  cls()
  map(0, 0, 0, 0, 8, 8)
  draw_player(player)
    
  draw_bullet(bullet)
  draw_bullet(bullet2)
  
  if (collide(bullet, bullet2)) then
    print("collided")
    end
end

--Rendering
-- render the nth sprite top left quarter on the tile at (tile_x, tile_y)
function render_tiled_sprite(n, tile_x, tile_y)
  spr(n, tile_x * tile_size, tile_y * tile_size, 0.5, 0.5)
end

-- render the nth sprite top left quarter on the pixel (x ,y)
function render_sprite(n, x, y)
  spr(n, x, y, 0.5, 0.5)
end

--Player
function update_player(_player)
  -- move
  local new_position = {}
  new_position.x = _player.pos.x
  new_position.y = _player.pos.y
  if (btnp(0)) then
    new_position.x -= 1
  elseif (btnp(1)) then
    new_position.x += 1
  elseif (btnp(2)) then
    new_position.y -= 1
  elseif (btnp(3)) then
    new_position.y += 1
  end
  if (is_walkable(new_position)) then
    _player.pos = new_position
  end
end

function draw_player(_player)
  render_tiled_sprite(_player.sprite_id, _player.pos.x, _player.pos.y)
end


function create_player(x, y)
  _player = {}
    _player.pos = {}
    _player.pos.x = x -- x and y are tile positions
    _player.pos.y = y
    _player.sprite_id = 11
  return _player
end

--Collision
walkable_tile = 2

-- x and y are tile positions
function is_walkable(x, y)
  return mget(x / 2, y / 2) == walkable_tile
end

function is_walkable(position)
  return mget(position.x / 2, position.y / 2) == walkable_tile
end

function collide(obj, other)
    if
        other.pos.x+other.hitbox.x+other.hitbox.w > obj.pos.x+obj.hitbox.x and 
        other.pos.y+other.hitbox.y+other.hitbox.h > obj.pos.y+obj.hitbox.y and
        other.pos.x+other.hitbox.x < obj.pos.x+obj.hitbox.x+obj.hitbox.w and
        other.pos.y+other.hitbox.y < obj.pos.y+obj.hitbox.y+obj.hitbox.h 
    then
        return true
    end
end

--Utils
-- converts anything to string, even nested tables
function tostring(any)
    if type(any)=="function" then 
        return "function" 
    end
    if any==nil then 
        return "nil" 
    end
    if type(any)=="string" then
        return any
    end
    if type(any)=="boolean" then
        if any then return "true" end
        return "false"
    end
    if type(any)=="table" then
        local str = "{ "
        for k,v in pairs(any) do
            str=str..tostring(k).."->"..tostring(v).." "
        end
        return str.."}"
    end
    if type(any)=="number" then
        return ""..any
    end
    return "unkown" -- should never show
end

--Bullet
function update_bullet(_bullet)
  if (time() - _bullet.last_update_time > 1 / _bullet.speed) then
    _bullet.last_update_time = time()
    _bullet.pos.x += _bullet.direction.x
    _bullet.pos.y += _bullet.direction.y
  end
end

function draw_bullet(_bullet)
  render_sprite(_bullet.sprite_id, _bullet.pos.x, _bullet.pos.y)
end

function create_bullet(x, y, w, h, direction, speed, sprite_id)
  _bullet = {}
  _bullet.pos = {}
  _bullet.pos.x = x
  _bullet.pos.y = y
  _bullet.hitbox = {}
  _bullet.hitbox.x = 0 -- relative to pos
  _bullet.hitbox.y = 0
  _bullet.hitbox.w = w
  _bullet.hitbox.h = h
  _bullet.speed = speed -- pixels per second
  _bullet.direction = direction -- vector2
  _bullet.sprite_id = sprite_id
  _bullet.last_update_time = time()
  return _bullet
end

__gfx__
00000000eeeeeeee33333333999999990000000000000000000000000000000000000000666666666000606066bb3ee380000000000000000000000000000000
00000000eeeeeeee333333339999999900000000000000000000000000000000000000006666600060606606666ee66e00000000000000000000000000000000
00700700eeeeeeee33333333999999991111111111111111111111111111111111111111666666666000606066bbe66e00000000000000000000000000000000
00077000eeeeeeee3333333399999999188bb171117171711717711171177711111111116333333333333336bbbb3ee300000000000000000000000000000000
00077000eeeeeeee3333333399999999188bb1717171117717171717171171111111111163333333333333361c11266200000000000000000000000000000000
00700700eeeeeeee33333333999999991cc99171717171717717171717171111111111116333333333333336ccc16ee600000000000000000000000000000000
00000000eeeeeeee33333333999999991cc991777771717117177111711777111111111163333333333333361c116ee600000000000000000000000000000000
00000000eeeeeeee333333339999999911111111111111111111111111111111111111116333333333333336c1c1266200000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000063333333333333360000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000066666666666666660000000000000000000000000000000000000000
__gff__
0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0303030303030303010303030303030303010303030303030303010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303010303030303030303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303010303020202020303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030202030303010303020202020303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030202030303010303020202020303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303010303020202020303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0303030303030303010303030303030303010302020202020203010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0405060708080808010303030303030303010303030303030303010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
